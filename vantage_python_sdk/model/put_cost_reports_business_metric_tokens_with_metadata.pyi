# coding: utf-8

"""
    Vantage

    Vantage API

    The version of the OpenAPI document: 2.0.0
    Contact: support@vantage.sh
    Created by: https://www.vantage.sh
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from vantage_python_sdk import schemas  # noqa: F401


class PutCostReportsBusinessMetricTokensWithMetadata(
    schemas.ListSchema
):
    """NOTE:
    This class is auto generated by Konfig (https://konfigthis.com)

    The tokens for any BusinessMetrics to attach to the CostReport, and the unit scale.
    """


    class MetaOapg:
        
        @staticmethod
        def items() -> typing.Type['PutCostReportsBusinessMetricTokensWithMetadataItem']:
            return PutCostReportsBusinessMetricTokensWithMetadataItem

    def __new__(
        cls,
        arg: typing.Union[typing.Tuple['PutCostReportsBusinessMetricTokensWithMetadataItem'], typing.List['PutCostReportsBusinessMetricTokensWithMetadataItem']],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'PutCostReportsBusinessMetricTokensWithMetadata':
        return super().__new__(
            cls,
            arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> 'PutCostReportsBusinessMetricTokensWithMetadataItem':
        return super().__getitem__(i)

from vantage_python_sdk.model.put_cost_reports_business_metric_tokens_with_metadata_item import PutCostReportsBusinessMetricTokensWithMetadataItem
